name: Create release and upload artifact

on:
  workflow_dispatch:
  push:
    branches:
      - main

env:
  CARGO_TERM_COLOR: always

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    outputs:
      upload_url: ${{ steps.release.outputs.upload_url }}
    steps:
      - name: Bump version and push tag
        id: tag_version
        uses: mathieudutour/github-tag-action@v6.1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Create a GitHub release
        id: release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ steps.tag_version.outputs.new_tag }}
          name: Release ${{ steps.tag_version.outputs.new_tag }}
          body: ${{ steps.tag_version.outputs.changelog }}

  upload_assets:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    strategy:
      matrix:
        node-version:
          - 18.x
        rust-build:
          - x86_64-unknown-linux-gnu
#          - x86_64-pc-windows-gnu
#          - aarch64-apple-darwin

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3

      - name: Add rust target
        run: rustup target add ${{ matrix.rust-build }}
      - name: Build Rust
        working-directory: api
        run: cargo build --release --target ${{ matrix.rust-build }}

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
          cache-dependency-path: 'frontend/package-lock.json'
      - name: Install frontend react
        working-directory: frontend
        run: npm ci
      - name: Build frontend react
        working-directory: frontend
        run: npm run build --if-present

      - name: Copy artifacts to folder and compress
        run: |
          mkdir -p rusty_printer_monitor
          cp api/${{ matrix.rust-build }}/release/rusty_printer_monitor rusty_printer_monitor/
          cp -r frontend/build/* rusty_printer_monitor/
          tar -zcvf ${{ matrix.rust-build }}.tar.gz rusty_printer_monitor/

      - name: upload asset
        uses: shogo82148/actions-upload-release-asset@v1
        with:
          upload_url: ${{ needs.release.outputs.upload_url }}
          asset_path: ${{ matrix.rust-build }}.tar.gz
