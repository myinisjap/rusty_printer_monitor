name: Create release and upload artifact

on:
  workflow_dispatch:
  push:
    branches:
      - main

env:
  CARGO_TERM_COLOR: always

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    outputs:
      upload_url: ${{ steps.release.outputs.upload_url }}
    steps:
      - name: Bump version and push tag
        id: tag_version
        uses: mathieudutour/github-tag-action@v6.1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Create a GitHub release
        id: release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ steps.tag_version.outputs.new_tag }}
          name: Release ${{ steps.tag_version.outputs.new_tag }}
          body: ${{ steps.tag_version.outputs.changelog }}

  upload_assets:
    strategy:
        matrix:
          platform:
            - release_for: Linux-x86_64
              os: ubuntu-latest
              target: x86_64-unknown-linux-gnu
              bin: rusty_printer_monitor
              name: rusty-printer-monitor-Linux-x86_64.tar.gz
              command: build
    
            - release_for: Windows-x86_64
              os: windows-latest
              target: x86_64-pc-windows-msvc
              bin: rusty_printer_monitor.exe
              name: rusty-printer-monitor-Windows-x86_64.tar.gz
              command: build
    
            - release_for: macOS-x86_64
              os: macOS-latest
              target: x86_64-apple-darwin
              bin: rusty_printer_monitor
              name: rusty-printer-monitor-Darwin-x86_64.tar.gz
              command: build
            
    name: upload assets for ${{ matrix.platform.release_for }}
    runs-on: ${{ matrix.platform.os }}
    permissions:
      contents: write
    
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3

      - name: Build rust binary
        uses: houseabsolute/actions-rust-cross@v0
        with:
          command: "build"
          target: ${{ matrix.platform.target }}
          args: "--release"
          working-directory: api

      - name: Use Node.js 18.x
        uses: actions/setup-node@v3
        with:
          node-version: 18.x
          cache: 'npm'
          cache-dependency-path: 'frontend/package-lock.json'
      - name: Install frontend react
        working-directory: frontend
        run: npm ci
      - name: Build frontend react
        working-directory: frontend
        run: npm run build --if-present

      - name: Copy artifacts to folder and compress
        run: |
          mkdir -p rusty_printer_monitor
          cp api/target/${{ matrix.platform.target }}/release/${{ matrix.platform.bin }} rusty_printer_monitor/${{ matrix.platform.bin }}
          cp -r frontend/build/* rusty_printer_monitor/
          tar -zcvf ${{ matrix.platform.name }} rusty_printer_monitor/

      - name: upload asset
        uses: shogo82148/actions-upload-release-asset@v1
        with:
          upload_url: ${{ needs.release.outputs.upload_url }}
          asset_path: ${{ matrix.platform.name }}
